// Generated by CoffeeScript 1.7.1
(function() {
  var exp, exports, factory,
    __slice = [].slice;

  factory = function(EventSpitter) {
    var LoudAccessors;
    return LoudAccessors = (function() {
      var prop, value, _ref;

      function LoudAccessors() {}

      _ref = EventSpitter.prototype;
      for (prop in _ref) {
        value = _ref[prop];
        LoudAccessors.prototype[prop] = value;
      }

      LoudAccessors.prototype.set = function(name, value, opts) {
        if (this._attributes == null) {
          this._attributes = {};
        }
        this._attributes[name] = value;
        if (!((opts != null) && opts.silent)) {
          return this.emit("change:" + name, name, value);
        }
      };

      LoudAccessors.prototype.get = function(name, opts) {
        if (this._attributes == null) {
          this._attributes = {};
        }
        value = this._attributes[name];
        if (!((opts != null) && opts.silent)) {
          this.emit("read:" + name, name, value);
        }
        return value;
      };

      LoudAccessors.prototype.del = function(name, opts) {
        if (this._attributes == null) {
          this._attributes = {};
        }
        delete this._attributes[name];
        if (!((opts != null) && opts.silent)) {
          return this.emit("delete:" + name, name);
        }
      };

      LoudAccessors.attrAccessor = function() {
        var args, name, _i, _len, _results;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        if (Object.defineProperty != null) {
          _results = [];
          for (_i = 0, _len = args.length; _i < _len; _i++) {
            name = args[_i];
            _results.push((function(_this) {
              return function(name) {
                return Object.defineProperty(_this.prototype, name, {
                  get: function() {
                    return this.get(name);
                  },
                  set: function(value) {
                    return this.set(name, value);
                  }
                });
              };
            })(this)(name));
          }
          return _results;
        }
      };

      return LoudAccessors;

    })();
  };

  if (typeof exports !== "undefined" && exports !== null) {
    exp = factory(require("eventspitter"));
    if ((typeof module !== "undefined" && module !== null) && (module.exports != null)) {
      exports = module.exports = exp;
    }
    exports.LoudAccessors = exp;
  } else if (typeof define === "function" && define.amd) {
    define(["eventspitter"], function(EventSpitter) {
      return factory(EventSpitter);
    });
  }

  this.LoudAccessors = factory(this.EventSpitter);

}).call(this);
